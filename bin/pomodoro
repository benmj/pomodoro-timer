#!/usr/bin/env node

//     pomodoro-timer
//     Copyright (c) 2013 Nick Baugh <niftylettuce@gmail.com>
//     MIT Licensed

//
// Free Pomodoro® Technique CLI timer built with Node.
//
// The Pomodoro Technique® and Pomodoro™ are
//  registered trademarks of Francesco Cirillo.
//

// * Author: [@niftylettuce](https://twitter.com/#!/niftylettuce)
// * Source: <https://github.com/niftylettuce/pomodoro-timer>

// # pomodoro-timer

var growl     = require('growl')
  , program   = require('commander')
  , path      = require('path')
  , fs        = require('fs')
  , play      = require('play').Play()
  , Progress  = require('../ext/progress')
  , color     = require('color')
  , time      = require('humanize-time')
  , repeat    = require('repeat-time')
  , after     = require('after-time')

  , version   = require('../package').version
  , pomodoro  = path.join(__dirname, '..', 'assets', 'pomodoro-timer.png')
  , start     = path.join(__dirname, '..', 'assets', 'start.wav')
  , done      = path.join(__dirname, '..', 'assets', 'done.wav')
  , playSound = function(sound, callback) {
      var callback = callback || function() {}
      callback()
  }

// Only try to play sound if play finds a media player
play.addListener('checked', function() {
  if (play.playerName) {
    playSound = play.sound.bind(play)
  }
})

program
  .version(version)
  .option('-t, --task <name>', 'task name')
  .parse(process.argv)

if (program.task){
  createTask(program.task)
} else {
  program.help()
}

function renderProgressBar(task){
  var bar  = new Progress(task + ' :bar :percent :elapsed'.red, {
    total: 25 * 60,
    width: 25,
    formatter: function(eta, elapsed, percent){
      return this.fmt
        .replace(':current', this.curr)
        .replace(':total', this.total)
        .replace(':elapsed', isNaN(elapsed) ? '0.0' : time(elapsed))
        .replace(':eta', (isNaN(eta) || !isFinite(eta)) ? '0.0' : (eta / 1000)
          .toFixed(1))
        .replace(':percent', percent.toFixed(0) + '%')
    }
  })
  bar.tick()
  repeat('1 s', function(){ bar.tick() })
}

function notifyGrowl(task, callback){
  growl(task, { title: 'Pomodoro - 25:00 Remaining', image: pomodoro })
  after('25 m', function() {
    callback()
    growl(task, { title: 'Pomodoro - Take a break!', image: pomodoro })
  })
}

function terminate(){
  playSound(done, function(){
    console.log()
    process.exit()
  })
}

function createTask(task) {
  renderProgressBar(task)
  playSound(start)
  notifyGrowl(task, terminate)
}
